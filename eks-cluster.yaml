apiVersion: eksctl.io/v1alpha5
kind: ClusterConfig

metadata:
  name: eks-demo
  region: us-east-1
  version: "1.19"
  tags:
    css-eks/cluster: "eks-demo"

vpc:
  id: "existing-vpc-id"  # (optional, must match VPC ID used for each subnet below)
  cidr: "vpc-cidr"
  clusterEndpoints:
    publicAccess: true
    privateAccess: true
  subnets:
    # must provide 'private' and/or 'public' subnets by availibility zone as shown
    public:
      us-east-1a:
        id: "existing-public-subnet-in-az1"
        cidr: "CIDR" # (optional, must match CIDR used by the given subnet)

      us-east-1b:
        id: "existing-public-subnet-in-az2"
        cidr: "CIDR"  # (optional, must match CIDR used by the given subnet)

    private:
      us-east-1a:
        id: "existing-private-subnet-in-az1"
        cidr: "CIDR"   # (optional, must match CIDR used by the given subnet)
      us-east-1b:
        id: "existing-private-subnet-in-az2"
        cidr: "CIDR"


cloudWatch:
    clusterLogging:
        # enable specific types of cluster control plane logs
        enableTypes: ["api", "audit", "authenticator", "controllerManager", "scheduler"]

nodeGroups:
  - name: node-group-1
    instanceType: t3a.medium
    minSize: 1
    desiredCapacity: 1
    maxSize: 4
    volumeSize: 30
    volumeType: "gp2"
    availabilityZones: ["us-east-1a"]
    tags:
      css-eks/cluster: "eks-demo"
    privateNetworking: true
    ssh:
      publicKeyName: eks-demo

  - name: node-group-2
    instanceType: t3a.medium
    minSize: 1
    desiredCapacity: 1
    maxSize: 4
    volumeSize: 30
    volumeType: "gp2"
    availabilityZones: ["us-east-1b"]
    tags:
      css-eks/cluster: "eks-demo"
    privateNetworking: true
    ssh:
      publicKeyName: eks-demo
